# 1️⃣ Build-Stage: Erstellt das Angular-Frontend
FROM --platform=linux/amd64 node:18-alpine AS builder

WORKDIR /app

# Kopiere package.json & package-lock.json für effizienteren Caching-Effekt
COPY frontend/package.json frontend/package-lock.json ./

# Installiere Produktionsabhängigkeiten
RUN npm install

# Kopiere den restlichen Frontend-Code
COPY frontend/ ./frontend

# Do NOT copy docs
ARG BUILD_ENV=production
RUN if [ "$BUILD_ENV" = "production" ]; then rm -rf ./frontend/src/assets/docs; fi

# Kopiere common Code
COPY common/ ./common

# Baue das Angular-Frontend
WORKDIR /app/frontend
RUN npm install @angular/cli && npm run build --omit=dev

# 2️⃣ Laufzeit-Stage: Nginx mit optimiertem Build
FROM --platform=linux/amd64 nginx:alpine

# Kopiere das gebaute Angular-Frontend ins Webserver-Verzeichnis
COPY --from=builder --chown=101:101 /app/dist/frontend/browser /usr/share/nginx/html

# Kopiere die benutzerdefinierte Nginx-Konfiguration
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf